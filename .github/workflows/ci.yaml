name: CI

# Cancel in-progress jobs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

env:
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.3
          run_install: false

      - name: 📦 Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

  codeQL:
    runs-on: ubuntu-latest
    needs: ["init"]
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.3
          run_install: false

      - name: 📦 Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: ✨ Lint & Formatting
        run: pnpm turbo format lint

  build:
    runs-on: ubuntu-latest
    needs: ["codeQL"]
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.3
          run_install: false

      - name: 📦 Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build apps
        run: pnpm build

  build-storybook:
    runs-on: ubuntu-latest
    needs: ["codeQL"]
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.3
          run_install: false

      - name: 📦 Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "pnpm"

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build all storybook
        run: pnpm storybook:build

  chromatic:
    runs-on: ubuntu-latest
    needs: ["codeQL", "build", "build-storybook"]
    strategy:
      matrix:
        project:
          - name: "@alareis/frontend"
            path: apps/frontend
            chromaticToken: CHROMATIC_TOKEN_FRONTEND

          - name: "@alareis/design-system"
            path: libs/design-system
            chromaticToken: CHROMATIC_TOKEN_DESIGN_SYSTEM
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.3
          run_install: false

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build storybook
        run: pnpm run storybook:build --filter=${{ matrix.project.name }} -- --stats-json

      - name: 💄 Publish to Chromatic
        uses: chromaui/action@v13
        with:
          projectToken: ${{ secrets[matrix.project.chromaticToken] }}
          exitZeroOnChanges: false
          autoAcceptChanges: ${{ contains(fromJSON('["refs/heads/main"]'), github.ref) }}
          workingDir: ${{ matrix.project.path }}
          storybookBuildDir: "storybook-static"
          onlyChanged: true
          skip: "@(renovate/**|dependabot/**)"

  deploy-api:
    if: ${{ startsWith(github.ref, 'refs/heads/main') }}
    runs-on: ubuntu-latest
    needs: ["chromatic"]
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: ✨ Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: 🐋 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🐋 Login to fly registry
        run: flyctl auth docker

      - name: 🐳 Docker build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/api/Dockerfile
          target: runner
          push: true
          tags: registry.fly.io/alareis-api:${{ github.ref_name }}-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          secrets: |
            turbo_team=${{ secrets.TURBO_TEAM }}
            turbo_token=${{ secrets.TURBO_TOKEN }}

      - name: 🌍 Deployment
        run: |
          flyctl deploy \
          --config ./apps/api/fly.toml \
          --app alareis-api \
          --image "registry.fly.io/alareis-api:${{ github.ref_name }}-${{ github.sha }}" \
          --env APP_VERSION=${{ github.sha }}

  deploy-frontend:
    if: ${{ startsWith(github.ref, 'refs/heads/main')  }}
    runs-on: ubuntu-latest
    environment: prod
    needs: ["chromatic"]
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: ✨ Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: 🐋 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🐋 Login to fly registry
        run: flyctl auth docker

      - name: 🐳 Docker build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/frontend/Dockerfile
          target: runner
          push: true
          tags: registry.fly.io/alareis-frontend:${{ github.ref_name }}-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          secrets: |
            turbo_team=${{ secrets.TURBO_TEAM }}
            turbo_token=${{ secrets.TURBO_TOKEN }}
          build-args: |
            VITE_FRONTEND_URI=${{secrets.FRONTEND_URI}}

      - name: 🌍 Deployment
        run: |
          flyctl deploy \
          --config ./apps/frontend/fly.toml \
          --app alareis-frontend \
          --image "registry.fly.io/alareis-frontend:${{ github.ref_name }}-${{ github.sha }}" \
          --env APP_VERSION=${{ github.sha }}
